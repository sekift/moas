<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moas.back.dao.TopCoinMapper" >
  <resultMap id="BaseResultMap" type="com.moas.back.model.TopCoin" >
    <id column="coinid" property="coinid" jdbcType="BIGINT" />
    <result column="coin_name" property="coinName" jdbcType="VARCHAR" />
    <result column="vol" property="vol" jdbcType="DECIMAL" />
    <result column="high" property="high" jdbcType="DECIMAL" />
    <result column="low" property="low" jdbcType="DECIMAL" />
    <result column="last_day" property="lastDay" jdbcType="DECIMAL" />
    <result column="last" property="last" jdbcType="DECIMAL" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="buy" property="buy" jdbcType="DECIMAL" />
    <result column="sell" property="sell" jdbcType="DECIMAL" />
    <result column="coin_range" property="coinRange" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    coinid, coin_name, vol, high, low, last_day, last, money, buy, sell, coin_range, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.moas.back.model.TopCoinExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from top_coin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from top_coin
    where coinid = #{coinid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from top_coin
    where coinid = #{coinid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.moas.back.model.TopCoinExample" >
    delete from top_coin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.moas.back.model.TopCoin" >
    insert into top_coin (coinid, coin_name, vol, 
      high, low, last_day, 
      last, money, buy, sell, 
      coin_range, create_time)
    values (#{coinid,jdbcType=BIGINT}, #{coinName,jdbcType=VARCHAR}, #{vol,jdbcType=DECIMAL}, 
      #{high,jdbcType=DECIMAL}, #{low,jdbcType=DECIMAL}, #{lastDay,jdbcType=DECIMAL}, 
      #{last,jdbcType=DECIMAL}, #{money,jdbcType=DECIMAL}, #{buy,jdbcType=DECIMAL}, #{sell,jdbcType=DECIMAL}, 
      #{coinRange,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.moas.back.model.TopCoin" >
    insert into top_coin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="coinid != null" >
        coinid,
      </if>
      <if test="coinName != null" >
        coin_name,
      </if>
      <if test="vol != null" >
        vol,
      </if>
      <if test="high != null" >
        high,
      </if>
      <if test="low != null" >
        low,
      </if>
      <if test="lastDay != null" >
        last_day,
      </if>
      <if test="last != null" >
        last,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="buy != null" >
        buy,
      </if>
      <if test="sell != null" >
        sell,
      </if>
      <if test="coinRange != null" >
        coin_range,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="coinid != null" >
        #{coinid,jdbcType=BIGINT},
      </if>
      <if test="coinName != null" >
        #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="vol != null" >
        #{vol,jdbcType=DECIMAL},
      </if>
      <if test="high != null" >
        #{high,jdbcType=DECIMAL},
      </if>
      <if test="low != null" >
        #{low,jdbcType=DECIMAL},
      </if>
      <if test="lastDay != null" >
        #{lastDay,jdbcType=DECIMAL},
      </if>
      <if test="last != null" >
        #{last,jdbcType=DECIMAL},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="buy != null" >
        #{buy,jdbcType=DECIMAL},
      </if>
      <if test="sell != null" >
        #{sell,jdbcType=DECIMAL},
      </if>
      <if test="coinRange != null" >
        #{coinRange,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.moas.back.model.TopCoinExample" resultType="java.lang.Integer" >
    select count(*) from top_coin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update top_coin
    <set >
      <if test="record.coinid != null" >
        coinid = #{record.coinid,jdbcType=BIGINT},
      </if>
      <if test="record.coinName != null" >
        coin_name = #{record.coinName,jdbcType=VARCHAR},
      </if>
      <if test="record.vol != null" >
        vol = #{record.vol,jdbcType=DECIMAL},
      </if>
      <if test="record.high != null" >
        high = #{record.high,jdbcType=DECIMAL},
      </if>
      <if test="record.low != null" >
        low = #{record.low,jdbcType=DECIMAL},
      </if>
      <if test="record.lastDay != null" >
        last_day = #{record.lastDay,jdbcType=DECIMAL},
      </if>
      <if test="record.last != null" >
        last = #{record.last,jdbcType=DECIMAL},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.buy != null" >
        buy = #{record.buy,jdbcType=DECIMAL},
      </if>
      <if test="record.sell != null" >
        sell = #{record.sell,jdbcType=DECIMAL},
      </if>
      <if test="record.coinRange != null" >
        coin_range = #{record.coinRange,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update top_coin
    set coinid = #{record.coinid,jdbcType=BIGINT},
      coin_name = #{record.coinName,jdbcType=VARCHAR},
      vol = #{record.vol,jdbcType=DECIMAL},
      high = #{record.high,jdbcType=DECIMAL},
      low = #{record.low,jdbcType=DECIMAL},
      last_day = #{record.lastDay,jdbcType=DECIMAL},
      last = #{record.last,jdbcType=DECIMAL},
      money = #{record.money,jdbcType=DECIMAL},
      buy = #{record.buy,jdbcType=DECIMAL},
      sell = #{record.sell,jdbcType=DECIMAL},
      coin_range = #{record.coinRange,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.moas.back.model.TopCoin" >
    update top_coin
    <set >
      <if test="coinName != null" >
        coin_name = #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="vol != null" >
        vol = #{vol,jdbcType=DECIMAL},
      </if>
      <if test="high != null" >
        high = #{high,jdbcType=DECIMAL},
      </if>
      <if test="low != null" >
        low = #{low,jdbcType=DECIMAL},
      </if>
      <if test="lastDay != null" >
        last_day = #{lastDay,jdbcType=DECIMAL},
      </if>
      <if test="last != null" >
        last = #{last,jdbcType=DECIMAL},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="buy != null" >
        buy = #{buy,jdbcType=DECIMAL},
      </if>
      <if test="sell != null" >
        sell = #{sell,jdbcType=DECIMAL},
      </if>
      <if test="coinRange != null" >
        coin_range = #{coinRange,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where coinid = #{coinid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.moas.back.model.TopCoin" >
    update top_coin
    set coin_name = #{coinName,jdbcType=VARCHAR},
      vol = #{vol,jdbcType=DECIMAL},
      high = #{high,jdbcType=DECIMAL},
      low = #{low,jdbcType=DECIMAL},
      last_day = #{lastDay,jdbcType=DECIMAL},
      last = #{last,jdbcType=DECIMAL},
      money = #{money,jdbcType=DECIMAL},
      buy = #{buy,jdbcType=DECIMAL},
      sell = #{sell,jdbcType=DECIMAL},
      coin_range = #{coinRange,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where coinid = #{coinid,jdbcType=BIGINT}
  </update>

  <select id="search" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    top_coin
    <where>
      create_time &lt;= CONCAT(date_format(DATE_SUB(NOW(),
      INTERVAL #{lessSecond,jdbcType=INTEGER} SECOND),'%Y%m%d%H%i%S'),'000')
      and
      create_time &gt;= CONCAT(date_format(DATE_SUB(NOW(),
      INTERVAL #{greatSecond,jdbcType=INTEGER} SECOND),'%Y%m%d%H%i%S'),'000')
    </where>
    GROUP BY coin_name
    ORDER BY coinid ASC
    LIMIT 100
  </select>
</mapper>